{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/internal/font/google/josefin_sans_4e644f9a.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"josefin_sans_4e644f9a-module__pvq52q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/internal/font/google/josefin_sans_4e644f9a.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Josefin_Sans%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22josefinSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'__Josefin_Sans_4e644f', '__Josefin_Sans_Fallback_4e644f'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;;;AACA,MAAM,WAAW;IACb,WAAW,4JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,4JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,4JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/session/SessionWrapper.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/session/SessionWrapper.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/session/SessionWrapper.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Josefin_Sans } from \"next/font/google\";\nimport \"../styles/globals.scss\";\nimport SessionWrapper from \"@/components/session/SessionWrapper.tsx\";\n\nconst josefinSans = Josefin_Sans({ subsets: [\"latin\"] });\n\nexport const metadata: Metadata = {\n  title: \"Gravl\",\n  description: \"Track your travels interactively.\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <SessionWrapper>\n      <html lang=\"en\">\n        <body className={josefinSans.className}>{children}</body>\n      </html>\n    </SessionWrapper>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAOO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,wPAAC,+IAAA,CAAA,UAAc;kBACb,cAAA,wPAAC;YAAK,MAAK;sBACT,cAAA,wPAAC;gBAAK,WAAW,gJAAA,CAAA,UAAW,CAAC,SAAS;0BAAG;;;;;;;;;;;;;;;;AAIjD"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/nopage.module.scss.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"container\": \"nopage-module-scss-module__9JVuBW__container\",\n  \"deadEndSign\": \"nopage-module-scss-module__9JVuBW__deadEndSign\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/header/Header.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/components/header/Header.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/header/Header.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,+PAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/api/auth/[...nextauth]/auth.ts"],"sourcesContent":["import { PrismaAdapter } from \"@next-auth/prisma-adapter\";\nimport { PrismaClient } from \"@prisma/client\";\nimport { NextAuthOptions } from \"next-auth\";\nimport { type User } from \"next-auth\";\nimport GoogleProvider from \"next-auth/providers/google\";\n\nconst prisma = new PrismaClient();\n\nexport const authOptions: NextAuthOptions = {\n  providers: [\n    GoogleProvider({\n      clientId: process.env.GOOGLE_CLIENT_ID!,\n      clientSecret: process.env.GOOGLE_CLIENT_SECRET!,\n      authorization: { params: { access_type: \"offline\", prompt: \"consent\" } },\n    }),\n  ],\n  callbacks: {\n    async jwt({ token, account }) {\n      console.log(\"jwt works\");\n      if (account) {\n        console.log(\"ACCOUNT! WE HAVE AN ACCOUNT BLESSED LORD WE DO\");\n        // First login, save the `access_token`, `refresh_token`, and other\n        // details into the JWT\n\n        const userProfile: User = {\n          // @ts-ignore\n          id: token.sub,\n          // @ts-ignore\n          name: profile?.name,\n          // @ts-ignore\n          email: profile?.email,\n          image: token?.picture,\n        };\n\n        return {\n          access_token: account.access_token,\n          expires_at: account.expires_at,\n          refresh_token: account.refresh_token,\n          user: userProfile,\n        };\n      } else if (Date.now() < token.expires_at * 1000) {\n        // Subsequent logins, if the `access_token` is still valid, return the JWT\n        return token;\n      } else {\n        // Subsequent logins, if the `access_token` has expired, try to refresh it\n        if (!token.refresh_token) throw new Error(\"Missing refresh token\");\n\n        try {\n          // The `token_endpoint` can be found in the provider's documentation. Or if they support OIDC,\n          // at their `/.well-known/openid-configuration` endpoint.\n          // i.e. https://accounts.google.com/.well-known/openid-configuration\n          const response = await fetch(\"https://oauth2.googleapis.com/token\", {\n            headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n            body: new URLSearchParams({\n              client_id: process.env.AUTH_GOOGLE_ID!,\n              client_secret: process.env.AUTH_GOOGLE_SECRET!,\n              grant_type: \"refresh_token\",\n              refresh_token: token.refresh_token!,\n            }),\n            method: \"POST\",\n          });\n\n          const responseTokens = await response.json();\n\n          if (!response.ok) throw responseTokens;\n\n          return {\n            // Keep the previous token properties\n            ...token,\n            access_token: responseTokens.access_token,\n            expires_at: Math.floor(\n              Date.now() / 1000 + (responseTokens.expires_in as number)\n            ),\n            // Fall back to old refresh token, but note that\n            // many providers may only allow using a refresh token once.\n            refresh_token: responseTokens.refresh_token ?? token.refresh_token,\n          };\n        } catch (error) {\n          console.error(\"Error refreshing access token\", error);\n          // The error property can be used client-side to handle the refresh token error\n          return { ...token, error: \"RefreshAccessTokenError\" as const };\n        }\n      }\n    },\n    async session({ session, token }) {\n      if (token?.user && session) {\n        // @ts-ignore\n        session.user = token.user as User;\n      }\n\n      return session;\n    },\n  },\n  useSecureCookies: false,\n  adapter: PrismaAdapter(prisma),\n};\n\ndeclare module \"next-auth\" {\n  interface Session {\n    error?: \"RefreshAccessTokenError\";\n  }\n}\n\ndeclare module \"next-auth/jwt\" {\n  interface JWT {\n    access_token: string;\n    expires_at: number;\n    refresh_token: string;\n    error?: \"RefreshAccessTokenError\";\n  }\n}\n"],"names":[],"mappings":";;;;;;;;;;AAMA,MAAM,SAAS,IAAI,uDAAA,CAAA,eAAY;AAExB,MAAM,cAA+B;IAC1C,WAAW;QACT,CAAA,GAAA,mJAAA,CAAA,UAAc,AAAD,EAAE;YACb,UAAU,QAAQ,GAAG,CAAC,gBAAgB;YACtC,cAAc,QAAQ,GAAG,CAAC,oBAAoB;YAC9C,eAAe;gBAAE,QAAQ;oBAAE,aAAa;oBAAW,QAAQ;gBAAU;YAAE;QACzE;KACD;IACD,WAAW;QACT,MAAM,KAAI,EAAE,KAAK,EAAE,OAAO,EAAE;YAC1B,QAAQ,GAAG,CAAC;YACZ,IAAI,SAAS;gBACX,QAAQ,GAAG,CAAC;gBACZ,mEAAmE;gBACnE,uBAAuB;gBAEvB,MAAM,cAAoB;oBACxB,aAAa;oBACb,IAAI,MAAM,GAAG;oBACb,aAAa;oBACb,MAAM,SAAS;oBACf,aAAa;oBACb,OAAO,SAAS;oBAChB,OAAO,OAAO;gBAChB;gBAEA,OAAO;oBACL,cAAc,QAAQ,YAAY;oBAClC,YAAY,QAAQ,UAAU;oBAC9B,eAAe,QAAQ,aAAa;oBACpC,MAAM;gBACR;YACF,OAAO,IAAI,KAAK,GAAG,KAAK,MAAM,UAAU,GAAG,MAAM;gBAC/C,0EAA0E;gBAC1E,OAAO;YACT,OAAO;gBACL,0EAA0E;gBAC1E,IAAI,CAAC,MAAM,aAAa,EAAE,MAAM,IAAI,MAAM;gBAE1C,IAAI;oBACF,8FAA8F;oBAC9F,yDAAyD;oBACzD,oEAAoE;oBACpE,MAAM,WAAW,MAAM,MAAM,uCAAuC;wBAClE,SAAS;4BAAE,gBAAgB;wBAAoC;wBAC/D,MAAM,IAAI,gBAAgB;4BACxB,WAAW,QAAQ,GAAG,CAAC,cAAc;4BACrC,eAAe,QAAQ,GAAG,CAAC,kBAAkB;4BAC7C,YAAY;4BACZ,eAAe,MAAM,aAAa;wBACpC;wBACA,QAAQ;oBACV;oBAEA,MAAM,iBAAiB,MAAM,SAAS,IAAI;oBAE1C,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM;oBAExB,OAAO;wBACL,qCAAqC;wBACrC,GAAG,KAAK;wBACR,cAAc,eAAe,YAAY;wBACzC,YAAY,KAAK,KAAK,CACpB,KAAK,GAAG,KAAK,OAAQ,eAAe,UAAU;wBAEhD,gDAAgD;wBAChD,4DAA4D;wBAC5D,eAAe,eAAe,aAAa,IAAI,MAAM,aAAa;oBACpE;gBACF,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,iCAAiC;oBAC/C,+EAA+E;oBAC/E,OAAO;wBAAE,GAAG,KAAK;wBAAE,OAAO;oBAAmC;gBAC/D;YACF;QACF;QACA,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,IAAI,OAAO,QAAQ,SAAS;gBAC1B,aAAa;gBACb,QAAQ,IAAI,GAAG,MAAM,IAAI;YAC3B;YAEA,OAAO;QACT;IACF;IACA,kBAAkB;IAClB,SAAS,CAAA,GAAA,oKAAA,CAAA,gBAAa,AAAD,EAAE;AACzB"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/actions/actions.ts"],"sourcesContent":["\"use server\";\n\nimport { PrismaClient } from \"@prisma/client\";\nimport { PlaceWithoutId, TripInput } from \"@/utils/types\";\n\nconst prisma = new PrismaClient();\n\nfunction idToLabel(id: string) {\n  id = id.split(\"St__\").join(\"St. \");\n  id = id.split(\"__NP\").join(\"\");\n  id = id.split(\"__\").join(\", \");\n  id = id.split(\"_\").join(\" \");\n  return id;\n}\n\n/**\n * Add Places to the postgres db from list of Place IDs.\n *\n * @param type the type of Place (i.e. counties, states, etc)\n * @param places array of string Place IDs\n * @returns new Places\n */\nexport async function addPlaces(type: string, places: string[]) {\n  const formattedPlaces: PlaceWithoutId[] = places.map((place_id) => ({\n    place_id: place_id,\n    map_type: type,\n    label: idToLabel(place_id),\n  }));\n\n  const newPlaces = await prisma.place.createMany({\n    data: formattedPlaces,\n  });\n  return newPlaces;\n}\n\n// addPlaces(\"counties\", counties);\n\n/**\n * Loads all Places in the Place table from the db.\n *\n * @returns list of all Places\n */\nexport async function loadPlaces() {\n  const places = await prisma.place.findMany({\n    select: {\n      place_id: true,\n      label: true,\n      map_type: true,\n    },\n  });\n  return places;\n}\n\n/**\n * Gets the User with the given email in the database\n *\n * @param email to look up the User in the database\n * @returns the User with that email\n */\nexport async function getUser(email: string | undefined) {\n  if (!email) {\n    return null;\n  }\n  const user = await prisma.user.findUnique({\n    where: {\n      email: email,\n    },\n  });\n  return user;\n}\n\n/**\n * Gets the User with the given email in the database, including their trips and visits\n *\n * @param email to look up the User in the database\n * @returns the User with that email along with their trips and visits\n */\nexport async function getUserWithTripsAndVisits(email: string | undefined) {\n  if (!email) {\n    return null;\n  }\n  const user = await prisma.user.findUnique({\n    where: {\n      email: email,\n    },\n    include: {\n      trips: {\n        include: {\n          visits: true,\n        },\n      },\n    },\n  });\n  return user;\n}\n\n/**\n * Updates the User's object with new username, location, and bio.\n *\n * @param email to look up the User in the database\n * @param username to replace the current username (if valid)\n * @param location to replace the current location\n * @param bio to replace the current bio\n * @returns\n */\nexport async function updateUser(\n  email: string,\n  username: string,\n  location: string,\n  bio: string\n) {\n  if (!email) {\n    return null;\n  }\n  const user = await prisma.user.update({\n    where: {\n      email: email,\n    },\n    data: {\n      username: username,\n      location: location,\n      bio: bio,\n    },\n  });\n  return user;\n}\n\n/**\n * Checks whether the given username is unique or not.\n *\n * @param input potential username from the user's onboarding\n * @returns true if it's a unique username, false otherwise\n */\nexport async function uniqueUsername(input: string) {\n  const user = await prisma.user.findFirst({\n    where: { username: input },\n  });\n  return user === null;\n}\n\n/**\n * Gets all Places filtered by User and map type.\n *\n * @param user_id the user ID\n * @param type the type of Place to get\n * @returns list of Places (can be duplicates if multiple Visits) based on the User's Visits\n */\nexport async function getPlacesByUserAndType(\n  user_id: string | undefined,\n  type: string\n) {\n  if (!user_id) {\n    return [];\n  }\n\n  const visits = await prisma.visit.findMany({\n    where: {\n      trip: {\n        userId: user_id,\n      },\n      place: {\n        map_type: type,\n      },\n    },\n    include: {\n      place: true,\n    },\n    orderBy: [\n      {\n        date: \"asc\",\n      },\n      {\n        order: \"asc\",\n      },\n    ],\n  });\n\n  return visits.map((visit) => visit.place);\n}\n\n// Convert and add places from MyTrips.json\n\n/**\n * Adds the given Trip and its associated Visits to the given User.\n *\n * @param user_id the user ID\n * @param trip the Trip with Visits\n * @returns the added Trip\n */\nexport async function addTripToUser(user_id: string, trip: TripInput) {\n  const newTrip = await prisma.trip.create({\n    data: {\n      name: trip.trip_name,\n      description: trip.description,\n      userId: user_id,\n      visits: {\n        create: trip.visits.map((visit) => ({\n          placeId: visit.place_id,\n          date: new Date(visit.date),\n          order: visit.order,\n        })),\n      },\n    },\n  });\n\n  return newTrip;\n}\n\n/**\n * Delete the given trip, which will correspondingly delete all associated visits.\n *\n * @param trip_id the trip to delete\n * @returns the deleted trip\n */\nexport async function deleteTrip(trip_id: number) {\n  const deletedTrip = await prisma.trip.delete({\n    where: { id: trip_id },\n  });\n\n  return deletedTrip;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 425, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/not-found.tsx"],"sourcesContent":["import styles from \"../styles/nopage.module.scss\";\nimport Header from \"../components/header/Header.tsx\";\nimport Link from \"next/link\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"./api/auth/[...nextauth]/auth.ts\";\nimport { getUser } from \"@/actions/actions.ts\";\n\nexport default async function NotFound() {\n  // Redirect to new user landing page if not currently signed in. Else redirect to current user's home page.\n  let path: string | null = \"\";\n  const session = await getServerSession(authOptions);\n  if (session) {\n    const userEmail = session.user.email;\n    const user = await getUser(userEmail);\n    if (user) {\n      path = user.username;\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <div className={styles.container}>\n        <div className={styles.deadEndSign}>\n          <p>Dead End</p>\n        </div>\n        <h1>Oops, it looks like this page doesn't exist!</h1>\n        <Link href={`/${path}`}>\n          <button>U-turn</button>\n        </Link>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAOe,eAAe;IAC5B,2GAA2G;IAC3G,IAAI,OAAsB;IAC1B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,uJAAA,CAAA,cAAW;IAClD,IAAI,SAAS;QACX,MAAM,YAAY,QAAQ,IAAI,CAAC,KAAK;QACpC,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,IAAI,MAAM;YACR,OAAO,KAAK,QAAQ;QACtB;IACF;IAEA,qBACE;;0BACE,wPAAC,sIAAA,CAAA,UAAM;;;;;0BACP,wPAAC;gBAAI,WAAW,qJAAA,CAAA,UAAM,CAAC,SAAS;;kCAC9B,wPAAC;wBAAI,WAAW,qJAAA,CAAA,UAAM,CAAC,WAAW;kCAChC,cAAA,wPAAC;sCAAE;;;;;;;;;;;kCAEL,wPAAC;kCAAG;;;;;;kCACJ,wPAAC,4HAAA,CAAA,UAAI;wBAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC;kCACpB,cAAA,wPAAC;sCAAO;;;;;;;;;;;;;;;;;;;AAKlB"}},
    {"offset": {"line": 508, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/redirect/page.tsx"],"sourcesContent":["// An temporary route to handle whether the User goes to onboarding after they sign in with Google.\n\nimport { redirect } from \"next/navigation\";\nimport { getUser } from \"@/actions/actions\";\nimport { getServerSession } from \"next-auth\";\nimport { authOptions } from \"../api/auth/[...nextauth]/auth\";\n\nexport default async function Redirect() {\n  const session = await getServerSession(authOptions);\n\n  // Gets the user associated with the current session\n  const user = await getUser(session?.user.email);\n  if (!user?.username) {\n    // Redirects them to onboarding if they lack a username\n    redirect(\"/?ob=true\");\n  }\n  // Redirect them to their dashboard\n  redirect(`/${user.username}`);\n}\n"],"names":[],"mappings":"AAAA,mGAAmG;;;;;;;;;;;;;;AAOpF,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,qIAAA,CAAA,mBAAgB,AAAD,EAAE,uJAAA,CAAA,cAAW;IAElD,oDAAoD;IACpD,MAAM,OAAO,MAAM,CAAA,GAAA,yHAAA,CAAA,UAAO,AAAD,EAAE,SAAS,KAAK;IACzC,IAAI,CAAC,MAAM,UAAU;QACnB,uDAAuD;QACvD,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IACA,mCAAmC;IACnC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC;AAC9B"}},
    {"offset": {"line": 545, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 561, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/icon.ico.mjs (structured image object)"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 256, height: 256 }\n"],"names":[],"mappings":";;;;;;uCACe;IAAE,KAAA,+GAAA,CAAA,UAAG;IAAE,OAAO;IAAK,QAAQ;AAAI"}},
    {"offset": {"line": 572, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/redirect/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '2b29f9093c56b6f6e39e227998d9664077e7870e': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['uniqueUsername'])(...args)),\n  '3e6f491f24f097bc1125aad781fe6d4c58631c20': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['addTripToUser'])(...args)),\n  '45a705d4ad4df000822aeda2c9a1ad97c9a4eed2': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['getPlacesByUserAndType'])(...args)),\n  '4f51e0d38816914c77c8d938b8adcef5eba06d69': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['updateUser'])(...args)),\n  '64cc0c972e0bdcb3cb4512c398c8a9b5987fe924': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['loadPlaces'])(...args)),\n  '79374202fbaea84622087a75ab4e103542dbb7b6': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['deleteTrip'])(...args)),\n  '9e9e8210392da7c8ce1438aa4a0f16c2db168c7a': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['getUser'])(...args)),\n  'a94a18ceed7f770d2ef8307826f9ed4245245fcc': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['addPlaces'])(...args)),\n  'ee5491fb777621960b763cc66def043d9b24d093': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['getUserWithTripsAndVisits'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,iBAAiB,KAAK;IAC/I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,yBAAyB,KAAK;IACvJ,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,aAAa,KAAK;IAC3I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,aAAa,KAAK;IAC3I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,aAAa,KAAK;IAC3I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,UAAU,KAAK;IACxI,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,YAAY,KAAK;IAC1I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,mFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,4BAA4B,KAAK;AAC5J"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}