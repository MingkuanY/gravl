{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/header.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"account\": \"header-module-scss-module__4lyeFq__account\",\n  \"active\": \"header-module-scss-module__4lyeFq__active\",\n  \"dropdown\": \"header-module-scss-module__4lyeFq__dropdown\",\n  \"gravl\": \"header-module-scss-module__4lyeFq__gravl\",\n  \"headerContainer\": \"header-module-scss-module__4lyeFq__headerContainer\",\n  \"headerRightContainer\": \"header-module-scss-module__4lyeFq__headerRightContainer\",\n  \"inactive\": \"header-module-scss-module__4lyeFq__inactive\",\n  \"login\": \"header-module-scss-module__4lyeFq__login\",\n  \"loginContainer\": \"header-module-scss-module__4lyeFq__loginContainer\",\n  \"logo\": \"header-module-scss-module__4lyeFq__logo\",\n  \"logoContainer\": \"header-module-scss-module__4lyeFq__logoContainer\",\n  \"notifContainer\": \"header-module-scss-module__4lyeFq__notifContainer\",\n  \"pfp\": \"header-module-scss-module__4lyeFq__pfp\",\n  \"pfpContainer\": \"header-module-scss-module__4lyeFq__pfpContainer\",\n  \"testing\": \"header-module-scss-module__4lyeFq__testing\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/dashboard.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"bio\": \"dashboard-module-scss-module__BBjD5W__bio\",\n  \"container\": \"dashboard-module-scss-module__BBjD5W__container\",\n  \"edit\": \"dashboard-module-scss-module__BBjD5W__edit\",\n  \"location\": \"dashboard-module-scss-module__BBjD5W__location\",\n  \"main\": \"dashboard-module-scss-module__BBjD5W__main\",\n  \"pfpContainer\": \"dashboard-module-scss-module__BBjD5W__pfpContainer\",\n  \"profile\": \"dashboard-module-scss-module__BBjD5W__profile\",\n  \"userInfo\": \"dashboard-module-scss-module__BBjD5W__userInfo\",\n  \"username\": \"dashboard-module-scss-module__BBjD5W__username\",\n  \"usernameAndEdit\": \"dashboard-module-scss-module__BBjD5W__usernameAndEdit\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/maploader.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"container\": \"maploader-module-scss-module__5IAhcW__container\",\n  \"count\": \"maploader-module-scss-module__5IAhcW__count\",\n  \"countContainer\": \"maploader-module-scss-module__5IAhcW__countContainer\",\n  \"mapContainer\": \"maploader-module-scss-module__5IAhcW__mapContainer\",\n  \"progressContainer\": \"maploader-module-scss-module__5IAhcW__progressContainer\",\n  \"progressbarBackground\": \"maploader-module-scss-module__5IAhcW__progressbarBackground\",\n  \"selected\": \"maploader-module-scss-module__5IAhcW__selected\",\n  \"stats\": \"maploader-module-scss-module__5IAhcW__stats\",\n  \"totalCount\": \"maploader-module-scss-module__5IAhcW__totalCount\",\n  \"type\": \"maploader-module-scss-module__5IAhcW__type\",\n  \"unselected\": \"maploader-module-scss-module__5IAhcW__unselected\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 54, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/counties.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"date\": \"counties-module-scss-module__6_yV8q__date\",\n  \"highways\": \"counties-module-scss-module__6_yV8q__highways\",\n  \"hoverLabel\": \"counties-module-scss-module__6_yV8q__hoverLabel\",\n  \"map\": \"counties-module-scss-module__6_yV8q__map\",\n  \"state_borders\": \"counties-module-scss-module__6_yV8q__state_borders\",\n  \"visitedOn\": \"counties-module-scss-module__6_yV8q__visitedOn\",\n  \"visitedOnContainer\": \"counties-module-scss-module__6_yV8q__visitedOnContainer\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/manualfillcard.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"backBtn\": \"manualfillcard-module-scss-module__ufMcca__backBtn\",\n  \"clearBtn\": \"manualfillcard-module-scss-module__ufMcca__clearBtn\",\n  \"close\": \"manualfillcard-module-scss-module__ufMcca__close\",\n  \"closeContainer\": \"manualfillcard-module-scss-module__ufMcca__closeContainer\",\n  \"currentDateContainer\": \"manualfillcard-module-scss-module__ufMcca__currentDateContainer\",\n  \"date\": \"manualfillcard-module-scss-module__ufMcca__date\",\n  \"dateChanger\": \"manualfillcard-module-scss-module__ufMcca__dateChanger\",\n  \"dayCount\": \"manualfillcard-module-scss-module__ufMcca__dayCount\",\n  \"everything\": \"manualfillcard-module-scss-module__ufMcca__everything\",\n  \"first\": \"manualfillcard-module-scss-module__ufMcca__first\",\n  \"forwardBtn\": \"manualfillcard-module-scss-module__ufMcca__forwardBtn\",\n  \"header\": \"manualfillcard-module-scss-module__ufMcca__header\",\n  \"instruction\": \"manualfillcard-module-scss-module__ufMcca__instruction\",\n  \"largeMapContainer\": \"manualfillcard-module-scss-module__ufMcca__largeMapContainer\",\n  \"leftSide\": \"manualfillcard-module-scss-module__ufMcca__leftSide\",\n  \"main\": \"manualfillcard-module-scss-module__ufMcca__main\",\n  \"mapContainer\": \"manualfillcard-module-scss-module__ufMcca__mapContainer\",\n  \"name\": \"manualfillcard-module-scss-module__ufMcca__name\",\n  \"rightSide\": \"manualfillcard-module-scss-module__ufMcca__rightSide\",\n  \"text\": \"manualfillcard-module-scss-module__ufMcca__text\",\n  \"tip\": \"manualfillcard-module-scss-module__ufMcca__tip\",\n  \"titleContainer\": \"manualfillcard-module-scss-module__ufMcca__titleContainer\",\n  \"visitedList\": \"manualfillcard-module-scss-module__ufMcca__visitedList\",\n  \"visitedPlace\": \"manualfillcard-module-scss-module__ufMcca__visitedPlace\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/states.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"hoverLabel\": \"states-module-scss-module__R99yjG__hoverLabel\",\n  \"map\": \"states-module-scss-module__R99yjG__map\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 105, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 109, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/countries.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"hoverLabel\": \"countries-module-scss-module__7X9UTW__hoverLabel\",\n  \"map\": \"countries-module-scss-module__7X9UTW__map\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/nationalparks.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"hoverLabel\": \"nationalparks-module-scss-module__MYvgUa__hoverLabel\",\n  \"map\": \"nationalparks-module-scss-module__MYvgUa__map\",\n  \"park\": \"nationalparks-module-scss-module__MYvgUa__park\",\n  \"state\": \"nationalparks-module-scss-module__MYvgUa__state\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/userstats.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"desc\": \"userstats-module-scss-module__xRjXTG__desc\",\n  \"stat\": \"userstats-module-scss-module__xRjXTG__stat\",\n  \"userStats\": \"userstats-module-scss-module__xRjXTG__userStats\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/timeline.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"dates\": \"timeline-module-scss-module__9z2DGW__dates\",\n  \"dot\": \"timeline-module-scss-module__9z2DGW__dot\",\n  \"empty\": \"timeline-module-scss-module__9z2DGW__empty\",\n  \"pastTrips\": \"timeline-module-scss-module__9z2DGW__pastTrips\",\n  \"timeline\": \"timeline-module-scss-module__9z2DGW__timeline\",\n  \"trash\": \"timeline-module-scss-module__9z2DGW__trash\",\n  \"trashContainer\": \"timeline-module-scss-module__9z2DGW__trashContainer\",\n  \"tripCardContainer\": \"timeline-module-scss-module__9z2DGW__tripCardContainer\",\n  \"tripCheckpoint\": \"timeline-module-scss-module__9z2DGW__tripCheckpoint\",\n  \"year\": \"timeline-module-scss-module__9z2DGW__year\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/logtripbutton.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"button\": \"logtripbutton-module-scss-module__z_JzOa__button\",\n  \"plus\": \"logtripbutton-module-scss-module__z_JzOa__plus\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/tripcard.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"container\": \"tripcard-module-scss-module__fnAryG__container\",\n  \"locations\": \"tripcard-module-scss-module__fnAryG__locations\",\n  \"right\": \"tripcard-module-scss-module__fnAryG__right\",\n  \"selected\": \"tripcard-module-scss-module__fnAryG__selected\",\n  \"title\": \"tripcard-module-scss-module__fnAryG__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/newtrip.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"overlay\": \"newtrip-module-scss-module__kCqrCq__overlay\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/basictripinfocard.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"bottom\": \"basictripinfocard-module-scss-module__NQOSSa__bottom\",\n  \"chooseDate\": \"basictripinfocard-module-scss-module__NQOSSa__chooseDate\",\n  \"container\": \"basictripinfocard-module-scss-module__NQOSSa__container\",\n  \"dateContainer\": \"basictripinfocard-module-scss-module__NQOSSa__dateContainer\",\n  \"descInput\": \"basictripinfocard-module-scss-module__NQOSSa__descInput\",\n  \"error\": \"basictripinfocard-module-scss-module__NQOSSa__error\",\n  \"nameInput\": \"basictripinfocard-module-scss-module__NQOSSa__nameInput\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/datepicker.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"dateInput\": \"datepicker-module-scss-module__ag5yNW__dateInput\",\n  \"datePickerContainer\": \"datepicker-module-scss-module__ag5yNW__datePickerContainer\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/closebtn.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"close\": \"closebtn-module-scss-module__9E5UEG__close\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 206, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/styles/onboarding.module.scss.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"account\": \"onboarding-module-scss-module__YJjY2a__account\",\n  \"container\": \"onboarding-module-scss-module__YJjY2a__container\",\n  \"headingContainer\": \"onboarding-module-scss-module__YJjY2a__headingContainer\",\n  \"inputContainer\": \"onboarding-module-scss-module__YJjY2a__inputContainer\",\n  \"overlay\": \"onboarding-module-scss-module__YJjY2a__overlay\",\n  \"pin\": \"onboarding-module-scss-module__YJjY2a__pin\",\n  \"returnContainer\": \"onboarding-module-scss-module__YJjY2a__returnContainer\",\n  \"return_arrow\": \"onboarding-module-scss-module__YJjY2a__return_arrow\",\n  \"uploadPFP\": \"onboarding-module-scss-module__YJjY2a__uploadPFP\",\n  \"uploadPFPContainer\": \"onboarding-module-scss-module__YJjY2a__uploadPFPContainer\",\n  \"warning\": \"onboarding-module-scss-module__YJjY2a__warning\",\n  \"wordCount\": \"onboarding-module-scss-module__YJjY2a__wordCount\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/color.ts"],"sourcesContent":["export const interpolateColors = (\n  steps: number,\n  startColor: string,\n  endColor: string,\n  livedInColor = \"#319fff\"\n) => {\n  const startRGB = hexToRGB(startColor);\n  const endRGB = hexToRGB(endColor);\n\n  const stepR = (endRGB.r - startRGB.r) / steps;\n  const stepG = (endRGB.g - startRGB.g) / steps;\n  const stepB = (endRGB.b - startRGB.b) / steps;\n\n  const interpolatedColors = [];\n  interpolatedColors.push(livedInColor); // colors[0] = livedInColor always\n  for (let i = 0; i <= steps; i++) {\n    const r = Math.round(startRGB.r + stepR * i);\n    const g = Math.round(startRGB.g + stepG * i);\n    const b = Math.round(startRGB.b + stepB * i);\n    interpolatedColors.push(rgbToHex(r, g, b));\n  }\n\n  return interpolatedColors;\n};\n\nconst hexToRGB = (hex: string) => {\n  const r = parseInt(hex.slice(1, 3), 16);\n  const g = parseInt(hex.slice(3, 5), 16);\n  const b = parseInt(hex.slice(5, 7), 16);\n  return { r, g, b };\n};\n\nconst rgbToHex = (r: number, g: number, b: number) => {\n  return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\n};\n\nexport const todayColor = \"#319fff\";\nexport const otherColor = \"#0d5ecf\";\n"],"names":[],"mappings":";;;;;AAAO,MAAM,oBAAoB,CAC/B,OACA,YACA,UACA,eAAe,SAAS;IAExB,MAAM,WAAW,SAAS;IAC1B,MAAM,SAAS,SAAS;IAExB,MAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,IAAI;IACxC,MAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,IAAI;IACxC,MAAM,QAAQ,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,IAAI;IAExC,MAAM,qBAAqB,EAAE;IAC7B,mBAAmB,IAAI,CAAC,eAAe,kCAAkC;IACzE,IAAK,IAAI,IAAI,GAAG,KAAK,OAAO,IAAK;QAC/B,MAAM,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ;QAC1C,MAAM,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ;QAC1C,MAAM,IAAI,KAAK,KAAK,CAAC,SAAS,CAAC,GAAG,QAAQ;QAC1C,mBAAmB,IAAI,CAAC,SAAS,GAAG,GAAG;IACzC;IAEA,OAAO;AACT;AAEA,MAAM,WAAW,CAAC;IAChB,MAAM,IAAI,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI;IACpC,MAAM,IAAI,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI;IACpC,MAAM,IAAI,SAAS,IAAI,KAAK,CAAC,GAAG,IAAI;IACpC,OAAO;QAAE;QAAG;QAAG;IAAE;AACnB;AAEA,MAAM,WAAW,CAAC,GAAW,GAAW;IACtC,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC;AAC3E;AAEO,MAAM,aAAa;AACnB,MAAM,aAAa"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/date.ts"],"sourcesContent":["import { TripWithIdAndVisits, TripWithVisits } from \"./types\";\n\nexport const monthAbbreviations = [\n  \"Jan\",\n  \"Feb\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const shortMonthAbbreviations = [\n  \"Jan\",\n  \"Feb\",\n  \"Mar\",\n  \"Apr\",\n  \"May\",\n  \"Jun\",\n  \"Jul\",\n  \"Aug\",\n  \"Sep\",\n  \"Oct\",\n  \"Nov\",\n  \"Dec\",\n];\n\nexport const fullMonthNames = [\n  \"January\",\n  \"February\",\n  \"March\",\n  \"April\",\n  \"May\",\n  \"June\",\n  \"July\",\n  \"August\",\n  \"September\",\n  \"October\",\n  \"November\",\n  \"December\",\n];\n\nexport const dayOfWeek = [\n  \"Monday\",\n  \"Tuesday\",\n  \"Wednesday\",\n  \"Thursday\",\n  \"Friday\",\n  \"Saturday\",\n  \"Sunday\",\n];\n\n/**\n * Formats date from YYYY-MM-DD to long abbreviation format.\n *\n * @param dateString date in YYYY-MM-DD format\n * @returns date in \"June 21\" (aka long abbreviation) format for timeline\n */\nexport const formatDate = (dateString: string) => {\n  const dateObj = new Date(dateString);\n\n  const month = monthAbbreviations[dateObj.getMonth()];\n  const day = dateObj.getDate() + 1;\n\n  const formattedDate = `${month} ${day}`;\n  return formattedDate;\n};\n\n/**\n * Returns duration given the start date and end date, where it abstracts away month if same month, and adds year if different year.\n *\n * @param date1 in YYYY-MM-DD format\n * @param date2 in YYYY-MM-DD format\n * @returns duration in \"May 29 - June 4\" format\n */\nexport const formatDates = (date1: string, date2: string) => {\n  const sameYear =\n    new Date(date1).getFullYear() === new Date(date2).getFullYear();\n  const sameMonth =\n    new Date(date1).getMonth() === new Date(date2).getMonth() && sameYear;\n\n  const startDate = formatDate(date1);\n  const endDate = formatDate(date2);\n\n  if (startDate === endDate) {\n    return startDate;\n  }\n\n  const day2 = new Date(date2).getDate() + 1;\n  const year2 = new Date(date2).getFullYear();\n\n  return `${startDate} - ${sameMonth ? day2 : endDate}${\n    !sameYear ? \", \" + year2 : \"\"\n  }`;\n};\n\n/**\n * Formats a date into \"Jun 21, 2024\" format.\n *\n * @param dateString a date in YYYY-MM-DD format\n * @returns string in \"Jun 21, 2024\" (aka short abbreviation) format\n */\nexport const formatMDYDate = (dateString: string, fullMonth?: boolean) => {\n  const dateObj = new Date(dateString);\n\n  const year = dateObj.getFullYear();\n  const month = fullMonth\n    ? fullMonthNames[dateObj.getMonth()]\n    : shortMonthAbbreviations[dateObj.getMonth()];\n  const day = dateObj.getDate() + 1;\n\n  const formattedDate = `${month} ${day}, ${year}`;\n  return formattedDate;\n};\n\n/**\n * Adds days to a given date.\n *\n * @param input date in YYYY-MM-DD format to add days to\n * @param days to add to the input date\n * @returns new date in YYYY-MM-DD format\n */\nexport const addDays = (input: string, days: number) => {\n  const date = new Date(input);\n  date.setDate(date.getDate() + days);\n  return date.toISOString().split(\"T\")[0];\n};\n\nexport function getTripDates(trip: TripWithIdAndVisits) {\n  const dates = trip.visits.map((visit) => new Date(visit.date));\n  const startDate = new Date(Math.min(...dates.map((date) => date.getTime())))\n    .toISOString()\n    .split(\"T\")[0];\n  const endDate = new Date(Math.max(...dates.map((date) => date.getTime())))\n    .toISOString()\n    .split(\"T\")[0];\n  return { startDate, endDate };\n}\n\nexport function tripsThisYear(trips: TripWithIdAndVisits[]) {\n  const currentYear = new Date().getFullYear();\n  let tripCount = 0;\n\n  trips.forEach((trip) => {\n    const { startDate, endDate } = getTripDates(trip);\n    if (\n      new Date(startDate).getFullYear() === currentYear ||\n      new Date(endDate).getFullYear() === currentYear ||\n      (new Date(startDate).getFullYear() < currentYear &&\n        new Date(endDate).getFullYear() > currentYear)\n    ) {\n      tripCount++;\n    }\n  });\n\n  return tripCount;\n}\n\nexport const sortTrips = (trips: TripWithVisits[], chronological?: boolean) => {\n  const tripsWithStartDate = trips.map((trip) => ({\n    ...trip,\n    startDate: getTripDates(trip).startDate,\n  }));\n\n  tripsWithStartDate.sort((a, b) => {\n    if (chronological) {\n      return a.startDate!.localeCompare(b.startDate!);\n    } else {\n      return b.startDate!.localeCompare(a.startDate!);\n    }\n  });\n  return tripsWithStartDate;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/utils/map.ts"],"sourcesContent":["import { sortVisits } from \"@/components/log/ManualFillCard\";\nimport { PlaceInput, VisitInput } from \"@/utils/types\";\nimport { otherColor } from \"./color\";\n\n/*\nHOW NATIONAL PARKS AND OTHER CUSTOM INKSCAPE MAPS WORK:\n\nWhen clicking on it:\nUser will click on the path elements within each group, so check if the parent of the clicked element is a g tag and, if so, get the id from the parent/g-tag.\n\nWhen coloring it in:\nSelecting the document element with the given id will select the g-tag, so loop over its child elements and color those in.\n*/\n\n/**\n * Animates the visits in order on the map and updates the progress bar counter.\n *\n * @param data the list of visits to animate\n * @param pause the amount of time to pause between visits when animating\n * @param colors the list of colors to color the places on the map with\n * @param updateCount a function to update or reset the progress bar\n * @returns the timeouts to cancel them upon component offload\n */\nexport const loadMap = (\n  data: VisitInput[],\n  pause: number | undefined,\n  colors: string[],\n  updateCount?: Function\n) => {\n  let timeCounter = 0;\n  let timeouts: NodeJS.Timeout[] = [];\n  const uniqueVisits = new Set<string>();\n  data.forEach((visit) => uniqueVisits.add(visit.place_id));\n\n  uniqueVisits.forEach((place_id: string) => {\n    const color = colors[0];\n\n    const timeoutId = setTimeout(() => {\n      const element = document.getElementById(place_id);\n      if (element) {\n        const childPaths = element.querySelectorAll(\"path\");\n        if (childPaths.length) {\n          childPaths.forEach((path) => {\n            path.style.fill = color;\n          });\n        } else {\n          element.style.fill = color;\n        }\n        place_id !== \"DC\" && updateCount && updateCount(); // make sure DC doesn't get counted as a state\n      }\n    }, 500 + pause! * timeCounter++);\n    timeouts.push(timeoutId);\n  });\n\n  return () => {\n    timeouts.forEach((timeoutId) => clearTimeout(timeoutId));\n  };\n};\n\n/**\n * Called when the user clicks on the map when it's in edit mode and updates the visited list accordingly.\n *\n * @param placeIDs all the possible places\n * @param visits the user's visits for this trip\n * @param setVisits sets the user's visits for this trip\n * @param currentDate the date the user is currently editing, used to filter out which visits are today\n * @returns a function called when the user clicks on the map\n */\nexport const handleMapClick = (\n  placeIDs: Set<string>,\n  visits: VisitInput[],\n  setVisits: Function,\n  currentDate: string\n) => {\n  return (event: React.MouseEvent<SVGSVGElement, MouseEvent>) => {\n    const fillColor = \"#319fff\";\n    const defaultColor = \"#012241\";\n    const target = event.target as SVGPathElement;\n    let placeID = \"\";\n\n    if (\n      target.tagName === \"path\" &&\n      target.parentElement &&\n      target.parentElement.tagName === \"g\"\n    ) {\n      placeID = target.parentElement.id; // Get the id from the parent g tag\n    } else {\n      placeID = target.id; // Get the id from the current path tag\n    }\n\n    if (placeIDs && placeIDs.has(placeID)) {\n      const element = document.getElementById(placeID);\n      const visitExists = visits.some(\n        (visit) => visit.place_id === placeID && visit.date == currentDate\n      );\n      const childPaths = element?.querySelectorAll(\"path\");\n      if (visitExists) {\n        // Remove the visit if it exists\n        const updatedVisits = visits.filter(\n          (visit) => !(visit.place_id === placeID && visit.date === currentDate)\n        );\n        setVisits(updatedVisits);\n        const stillExists = updatedVisits.findIndex(\n          (v) => v.place_id === placeID\n        );\n\n        const color = stillExists === -1 ? defaultColor : otherColor;\n\n        if (childPaths?.length) {\n          childPaths.forEach(() => {\n            childPaths.forEach((path) => {\n              path.style.fill = color;\n            });\n          });\n        } else {\n          element!.style.fill = color;\n        }\n      } else {\n        // Add the visit if it does not exist\n        if (childPaths?.length) {\n          childPaths.forEach(() => {\n            childPaths.forEach((path) => {\n              path.style.fill = fillColor;\n            });\n          });\n        } else {\n          element!.style.fill = fillColor;\n        }\n\n        const newVisit = {\n          place_id: placeID,\n          date: currentDate,\n          order: visits.filter((visit) => visit.date === currentDate).length,\n        };\n        setVisits(sortVisits([...visits, newVisit]));\n      }\n    }\n  };\n};\n\n/**\n * Colors the places on the map visited on the current date with todayColor and colors places visited on other days with otherColor only if the place is not already visited on the current date.\n *\n * @param visits the visits for this trip\n * @param currentDate the current date the user is on\n * @param todayColor the color to fill places visited on the current date with\n * @param otherColor the color to fill places visited on other dates with (if not already colored for today)\n */\nexport function refreshMap(\n  visits: VisitInput[],\n  places: PlaceInput[],\n  currentDate: string,\n  todayColor: string,\n  otherColor: string,\n  defaultColor: string\n) {\n  const todayPlaces = new Set<string>();\n\n  places.forEach((place) => {\n    const element = document.getElementById(place.place_id);\n    if (element) {\n      const visit = visits.find((v) => v.place_id === place.place_id);\n      if (visit) {\n        const childPaths = element.querySelectorAll(\"path\");\n        if (visit.date === currentDate) {\n          if (childPaths.length) {\n            childPaths.forEach((path) => {\n              path.style.fill = todayColor;\n            });\n          } else {\n            element.style.fill = todayColor;\n          }\n          todayPlaces.add(visit.place_id);\n        } else if (!todayPlaces.has(visit.place_id)) {\n          if (childPaths.length) {\n            childPaths.forEach((path) => {\n              path.style.fill = otherColor;\n            });\n          } else {\n            element.style.fill = otherColor;\n          }\n        }\n      } else {\n        element.style.fill = defaultColor;\n      }\n    }\n  });\n}\n\n/**\n * Add the given designation before the comma in the label.\n *\n * @param label the label to be modified\n * @param designation the designation to add (i.e. County, State, etc)\n * @returns label with the given designation added, i.e. \"Polk County, WI\"\n */\nexport const addDesignationToLabel = (label: string, designation: string) => {\n  const parts = label.split(\", \");\n  return `${parts[0]} ${designation}, ${parts[1]}`;\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 529, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}